(define (problem strips-gripper-x-1)
(:domain gripper-strips-typing)
(:objects
transportador
	n0 n1 n2 n3 n4
		gripper_1_left 
	location_deposito loc1 loc2 loc3 loc4 loc5 loc6 loc7 loc8 loc9 loc10 
	box1 box2 box3 box4 box5 box6 box7 box8 box9 box10 
	food medicine 
	person1 person2 person3 person4 person5 person6 person7 person8 person9 person10 
	
	)
(:init
	(siguiente n0 n1)
	(siguiente n1 n2)
	(siguiente n2 n3)
	(siguiente n3 n4)

	(carga-actual transportador n0)

	(transportador transportador)

	(transportador-not-carry transportador)

	(gripper gripper_1_left)

	(location location_deposito)
	(location loc1)
	(location loc2)
	(location loc3)
	(location loc4)
	(location loc5)
	(location loc6)
	(location loc7)
	(location loc8)
	(location loc9)
	(location loc10)

	(box box1)
	(box box2)
	(box box3)
	(box box4)
	(box box5)
	(box box6)
	(box box7)
	(box box8)
	(box box9)
	(box box10)

	(type food)
	(type medicine)

	(person person1)
	(person person2)
	(person person3)
	(person person4)
	(person person5)
	(person person6)
	(person person7)
	(person person8)
	(person person9)
	(person person10)

	(gripper-at gripper_1_left location_deposito)
	(free gripper_1_left)
	(transportador-at transportador location_deposito)

	(box-type box1 food)
	(box-type box2 medicine)
	(box-type box3 food)
	(box-type box4 medicine)
	(box-type box5 food)
	(box-type box6 medicine)
	(box-type box7 food)
	(box-type box8 medicine)
	(box-type box9 food)
	(box-type box10 medicine)

	(box-at box1 location_deposito)
	(box-at box2 location_deposito)
	(box-at box3 location_deposito)
	(box-at box4 location_deposito)
	(box-at box5 location_deposito)
	(box-at box6 location_deposito)
	(box-at box7 location_deposito)
	(box-at box8 location_deposito)
	(box-at box9 location_deposito)
	(box-at box10 location_deposito)

	(person-at person1 loc8)
	(person-at person2 loc6)
	(person-at person3 loc2)
	(person-at person4 loc3)
	(person-at person5 loc9)
	(person-at person6 loc2)
	(person-at person7 loc7)
	(person-at person8 loc1)
	(person-at person9 loc6)
	(person-at person10 loc9)

	(person-dont-have person1 food)
	(person-have person1 medicine)
	(person-have person2 food)
	(person-dont-have person2 medicine)
	(person-dont-have person3 food)
	(person-have person3 medicine)
	(person-have person4 food)
	(person-dont-have person4 medicine)
	(person-dont-have person5 food)
	(person-have person5 medicine)
	(person-have person6 food)
	(person-dont-have person6 medicine)
	(person-dont-have person7 food)
	(person-have person7 medicine)
	(person-have person8 food)
	(person-dont-have person8 medicine)
	(person-dont-have person9 food)
	(person-have person9 medicine)
	(person-have person10 food)
	(person-dont-have person10 medicine)

)
(:goal (and
	(person-have person1 food)
	(person-have person1 medicine)
	(person-have person2 food)
	(person-have person2 medicine)
	(person-have person3 food)
	(person-have person3 medicine)
	(person-have person4 food)
	(person-have person4 medicine)
	(person-have person5 food)
	(person-have person5 medicine)
	(person-have person6 food)
	(person-have person6 medicine)
	(person-have person7 food)
	(person-have person7 medicine)
	(person-have person8 food)
	(person-have person8 medicine)
	(person-have person9 food)
	(person-have person9 medicine)
	(person-have person10 food)
	(person-have person10 medicine)
	))
)